service: TagBot
provider:
  name: aws
  iamRoleStatements:
    - Effect: Allow
      Action: sqs:SendMessage
      Resource: !GetAtt queue.Arn
  environment:
    CHANGELOG_WIP_MESSAGE: A changelog is being generated, please check back in a few minutes.
  layers:
    - arn:aws:lambda:us-east-1:553035198032:layer:git:5
package:
  exclude:
    - ./**
  include:
    - ./changelog/changelog.rb
    - ./github/bin/github
    - ./github/bin/resources.tar
    - ./vendor/**
functions:
  github:
    runtime: go1.x
    handler: github/bin/github
    timeout: 30
    environment:
      GITHUB_APP_ID: ${env:GITHUB_APP_ID}
      GITHUB_CONTACT_USER: ${env:GITHUB_CONTACT_USER}
      GITHUB_WEBHOOK_SECRET: ${env:GITHUB_WEBHOOK_SECRET}
      GIT_TAGGER_EMAIL: ${env:GIT_TAGGER_EMAIL}
      GIT_TAGGER_NAME: ${env:GIT_TAGGER_NAME}
      REGISTRATOR_USERNAME: ${env:REGISTRATOR_USERNAME}
      SQS_QUEUE: !Ref queue
    events:
      - http:
          path: /github
          method: post
      - sqs:
          arn: !GetAtt dead.Arn
          batchSize: 1
  changelog:
    runtime: ruby2.5
    handler: changelog/changelog.main
    timeout: 600
    events:
      - sqs:
          arn: !GetAtt queue.Arn
          batchSize: 1
  retry:
    runtime: ruby2.5
    handler: changelog/changelog.main
    timeout: 900
    memorySize: 3008
    events:
      - sqs:
          arn: !GetAtt backup.Arn
          batchSize: 1
resources:
  Resources:
    queue:
      Type: AWS::SQS::Queue
      Properties:
        VisibilityTimeout: 600
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt backup.Arn
          maxReceiveCount: 3
    backup:
      Type: AWS::SQS::Queue
      Properties:
        VisibilityTimeout: 900
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt dead.Arn
          maxReceiveCount: 1
    dead:
      Type: AWS::SQS::Queue
